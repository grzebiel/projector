#!/bin/bash

APP=${0##*/};
DB_DIR="$HOME/.prj"

print_usage() {
    if [ $# -eq 0 ]
    then
        echo -e "usage: $APP [--version] [--help]"
        echo -e "            <command> [<args>]"
        echo
        echo -e "available commands:"
        echo -e "   list       lists all added projects"
        echo -e "   init       add the project into the projector"
        echo
        echo -e "available options:"
        echo -e "   --version     prints the version number"
        echo -e "   --db_dir   specifies the directory to treat as database"
    else
        case $1 in
            list)
                echo -e "usage: $APP list [<options>]"
            ;;
            init)
                echo -e "usage: $APP init [<options>]"
                echo
                echo -e "   -n, --name   name of the project, default: current dirname"
            ;;
            *)
                echo -e "unknown command"
                exit 1
            ;;
        esac
    fi
}

init_project() {
    local NAME=$1
    shift
    local PRJ_DIR=$1
    shift

    PRJ_DB_DIR="$DB_DIR/$NAME"
    mkdir "$PRJ_DB_DIR"
    echo "$PRJ_DIR" > "$PRJ_DB_DIR/pwd"
    echo inited $NAME as $PRJ_DIR
}


list_projects() {
    ls $DB_DIR | while read DIR
    do
        local path=$(cat "$DB_DIR/$DIR/pwd")
        echo -e $DIR,$path
    done | column -s ',' -t
}

init() {
    mkdir $DB_DIR
}

if [ -d $DB_DIR ];
then
    init
fi

if [ $# -eq 0 ]
then
    echo "No args given, nothing to do"
    echo
    print_usage
    exit 1
fi

NAME="${PWD##*/}" #getting the name of top level directory

while [ $# -gt 0 ]; do
    case $1 in

        list)
            list_projects
            shift
        ;;
        init)
            shift
            while [ $# -gt 0 ]
            do
                case $1 in
                    -n|--name)
                        shift
                        if [ $# -lt 1 ]
                        then
                            echo "missing name parameter"
                            print_usage add
                            exit 1
                        fi
                        $NAME="$1"
                    ;;
                    -v|--version)
                        shift
                    ;;
                    *)
                        echo "unknown parameters!"
                        print_usage add
                        exit 1
                    ;;
                esac
            done
            init_project "$NAME" "$PWD"
        ;;
        help|--help|-h)
            shift
            print_usage $@
        ;;
        --db_dir)
            shift
            DB_DIR=$1
            shift
        ;;
        *)
            echo "unknown command $@"
            print_usage
            exit 1
        ;;
    esac
done
